setwd("/Users/joyqiu/Documents/Documents JoyQiu Work/Research/LLMTopicExtraction/llm_topic_extraction")
# example: 104a474
rm(list=ls())
library(dplyr)
library(parallel)
path = paste0("./scripts/data_eng/utils")
flst = list.files(path)
sapply(c(paste(path,flst,sep="/")), source, .GlobalEnv)
fea_df <- read.csv("./data/fea_df.csv")
library(readxl)
df_human2 <- read_excel("./human_data/sampled_posts_dongliang.xlsx", sheet = "dongliang")
df_human2 <- df_human2 %>% arrange(sm_id)
parse_answers <- function(answer_str) {
# Extract all key-value pairs using regular expression, ignoring the initial numbering
pairs <- str_extract_all(answer_str, "\\(\\d+\\)\\s(\\w+):\\s(\\d)")[[1]]
# Split the pairs into topics and values
split_pairs <- str_split(pairs, ":\\s")
# Convert to a named vector, removing the numbering
values <- sapply(split_pairs, function(x) as.integer(x[2]))
names(values) <- sapply(split_pairs, function(x) {
# Remove the initial numbering from the topic name
sub("^\\(\\d+\\)\\s", "", x[1])
})
return(values)
}
# Assuming df_human1 has columns 'sm_id', 'text_w_eos', and 'answer_string_human'
answer_matrix <- t(apply(df_human2, 1, function(x) parse_answers(x['answer_string_human'])))
# Convert the matrix to a dataframe
answer_df <- as.data.frame(answer_matrix)
labeled_df_human <- cbind(df_human2[c("sm_id", "text_w_eos")], answer_df)
labeled_df_human$idealbody <- ifelse(labeled_df_human$thinspo + labeled_df_human$leanbody > 0, 1, 0)
labeled_df_human$fearfood <- ifelse(labeled_df_human$fearfood + labeled_df_human$fearcarb > 0, 1, 0)
write.csv(labeled_df_human, "./human_data/results2.csv", row.names = F)
View(labeled_df_human)
setwd("/Users/joyqiu/Documents/Documents JoyQiu Work/Research/LLMTopicExtraction/llm_topic_extraction")
rm(list=ls())
fea_df <- read.csv("./data/fea_df.csv")
rownames(fea_df) <- fea_df$fea
fea_df <- fea_df[setdiff(fea_df$fea, c("nosocialeat", "thinspo", "leanbody", "fearcarb","meal")),]
fea_df <- fea_df[sort(fea_df$fea),]
rownames(fea_df) <- NULL
fea_df <- bind_rows(fea_df,data.frame("fea" = "idealbody",
"feature" = "Ideal body image",
"description" = "Ideal body image including thinness, skinny body, low body fat and lean body mass."))
label1 <- read.csv("./human_data/results.csv")
label2 <- read.csv("./human_data/results2.csv")
label1
View(label2)
label1 <- label1[which(label1$sm_id%in%label2$sm_id),]
label_data <- data.frame("human" = as.numeric(unlist(label1[,fea_df$fea])),
"gpt4o" = as.numeric(unlist(label2[,fea_df$fea])))
irrCAC::fleiss.kappa.raw(label_data)$est
irrCAC::gwet.ac1.raw(label_data)$est
irrCAC::fleiss.kappa.raw(label_data)$est
